#!/usr/bin/perl


use lib "/usr/local/hdb/lib";


use strict;
use warnings;
use Getopt::Long;
use Rsync;
use JSON;
use Env qw(HOME);


my $cfg_file = "";
my $test = 0;
my $verbose = 0;
my $debug = 0;
my $help = 0;

my $getopt = GetOptions( "cfg=s" => \$cfg_file, "test" => \$test, "verbose" => \$verbose, "debug" => \$debug, "help" => \$help );

if ( ! $getopt ) {
	die("Unable to parse command line options\n");
}


if ( $help ) {
	print <<EOHELP;

hdb [--cfg=<configuration file>]

--cfg=<config file>    Specify a config file.  Default is '~/.hdbrc'.
--test                 Do a dry run of the rsync transfer.  Nothing will be changed.
--debug                Turn on debugging mode.

EOHELP
}


if ( ! $cfg_file ) {
	$cfg_file = $HOME . "/.hdbrc";
}

if ( ! -s $cfg_file ) {
	die ("No config file specified on command line and \$HOME/.hdbrc not found or empty\n");
}


my @config;

if ( open( my $fh, "<", $cfg_file ) ) {
	@config = <$fh>;
	close($fh);
} else {
	die("Unable to open config file '$cfg_file'\n");
}

my $config = JSON::decode_json( join("", @config) );

my @jobs = @{$config->{"jobs"}};

my $rsync_errors = 0;


printf ("\n\n");

foreach my $job (@jobs) {

	my @sources = @{$job->{"sources"}};
	my $destination = $job->{"destination"};
	my $rsync_opts = $job->{"rsync options"};

	my $rsync = new Rsync( { "destination" => $destination , "rsync_opts" => $rsync_opts , "verbose" => $verbose, "debug" => $debug , "test" => $test } );

	map { 
		if ( $rsync->go($_) ) {
			$rsync_errors++;
		}

		printf("\n\n");
	} @sources;

}


if ( $rsync_errors ) {
	exit(-1);
} else {
	exit(0);
}
